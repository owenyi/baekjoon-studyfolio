3052 : set 이용
10951 : 줄 없을 때까지 입력
11720 : map
1654 : N과 sum이 같으면 끝나는 게 아님, right를 출력하는 이유, left값
1929 : isPrime에서 1의 처리
1966 : rotate 방향
2108 : 최빈값, 문제 조건 정독, sys로 input
2231 : max(1, N - 54)
2775 : 재귀 속도 느림
2805 : PyPy3을 쓰자, high출력
20055 : 이중 deque보다 deque 두 개가 빠름, and 연산자 앞이 거짓이면 뒤 안봄
4949 : 로직 한 바퀴 끝나고 스택 남았는지 확인
7568 : 입력 값들의 범위가 작음, 완전탐색
9012 : 함수에서 print('YES') 말고 return 'YES'
10250 : h는 0부터 H - 1이 아니라 1부터 H, 그에 따른 w
10814 : 121 > 20 but '121' < '20'
10989 : 메모리는 python3, 출력 for문 N아니고 10000
11050 : 내장 factorial
11866 : 'str' object does not support item assignment
15829 : 100점, overflow
18111 : 시간에 연연하지 말기, 답이 여러 개라면
1003 : 표를 그려보자
1012 : 가로 세로 잘 보고 풀기, bfs도 고려해보기
1074 : r, c 반복문마다 빼주기
1107 : brute force, check 자리수로 하면 틀림, check의 n에 0이 들어갈 때 문제가 된 거임
1260 : 배열은 함수에서 바뀌어 버린다? 정렬하기, 다른 풀이방법도 해보기
1389 : 다른 그래프로도 풀어보기
12015 : 이분탐색 정확한 값 찾기 말고 적어도 x 찾기
1463 : 그저 memo
5430 : 효율성을 위해 반전은 한 번만
15649-1 : 얕은복사
2606-1, e : visited 갱신 위치, 1260-e 참고
1012-1 : recursion limit인줄 알았는데 and not visited[y][x - 1] 이게 중요
1012-2 : break가 아닌 continue
7562-1 : nx, ny
17142 : 행렬은 i, j 대신 x, y 사용
17142-e : 활성 바이러스가 비활성 바이러스가 있는 칸으로 가면 비활성 바이러스가 활성으로 변한다.
1931 : >=
1927 : sys.stdin.readline
11000 : end만 힙으로
1826 : 매순간 최소 혹은 최대값만 필요한 경우에 pq를 사용한다?
1717 : 메모이제이션
1043 : 유니온은 부모를 바꾸는 게 아니라 부모의 부모를 바꾸는 것
1939 : 다른 방법으로도 풀어보기
1647 : 배열에 담을 필요 없음
20927: cnt를 재귀함수 위아래가 아닌 매개변수에, v == 1인 경우 고려
1916 : 시간을 빠르게 하기 위한 한 줄
2665 : sys.stdin.readline으로 하니까 IndexError
15651 : backtracking에서 depth는 쓰는 게 좋다
18258 : 출력을 여러 번 하면 시간을 많이 쓴다, list에 append시 str보다 int가 훨씬 더 빨리된다.
2110 : 정렬 먼저! if문 만날 때마다 chk 바꾸기
2178 : not dfs
1707 : bfs로 그룹 나누기
7576 : 처음 1의 개수만큼 반복할 필요 없음, boj 채점기록에서 무슨 뜻인지 확인
2267 : 문제 조건에 결과 오름차순으로 출력
1932 : i 범위 설정 잘 생각하기
4673 : 뒤에 더 작은 수가 있을 수 있음
2581 : 범위 n**.5까지
11653 : 체 쓸 필요 없음
1002 : leedakyeong.tistory.com/entry/백준-1002번-터렛-in-python-파이썬-코드-및-설명
2021_Backend 2 : 행렬이 잘못됨
2021_Backend 3 : 시간 단축을 위한 key
2447 : 옆으로 쭉 이어붙이는 아이디어, 반복문 아닌 조인 후 출력, 파이썬처럼 말고 다시 풀어보기